#include<avr/io.h>
#define F_CPU 16000000UL
#include<util/delay.h>
void timer(unsigned int* sec);
void display(unsigned int*,unsigned int,unsigned int,unsigned int,unsigned int);
int main()
{
	DDRC = 0xFF;
	DDRG |= 0x0F;
	DDRE = DDRE & 0xCF;
	
	unsigned int n[] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F}; // 0~9  7-segment
	unsigned int sec=0;
	unsigned int s1=0,s2=0,s3=0,s4=0; // [ s4 ] [ s3 ] [ s2 ] [ s1 ] <- 7-segment LED
	int i; // iterator
	
	while(1)
	{
		
		
		if((PINE & 0x10)==0x00) // timer setting
		{
			s1++;
			_delay_ms(200);
			if(s1 == 10){
				s1 = 0;
				s2++;
			}
			if(s2 == 6){
				s1 = 0;
				s2 = 0;
				s3++;
			}
			if(s3 == 10){
				s1=0;
				s2=0;
				s3=0;
				s4++;
			}
			
		}
		
		if((PINE&0x20)==0x00) // timer utility
		{
			while(s1+s2+s3+s4 != 0)
			{
				for(i=0;i<125;i++)
				{
					timer(&sec);
				
					if(sec==125){
						s1--;	
					}
					if(s1==-1){
						s1=9;
						s2--;
					}
					if(s2==-1){
						s2=5;
						s3--;
					}
					if(s3==-1){
						s3=9;
						s4--;
					}
					display(n,s1,s2,s3,s4);
				}
				sec=0;
				///////////////////////////////////////////////////////////buzzer////////////
			}
		}
		
		
		
		display(n,s1,s2,s3,s4);
	}
	
	while(1);

	return(1);
}

void timer(unsigned int* sec)
{
	(*sec)++ ;
	return ;
}

void display(unsigned int* n,unsigned int s1,unsigned int s2,unsigned int s3,unsigned int s4)
{
	int i=0;
	PORTG = 0x01;
	
	for(i=0;i<4;++i)
	{
		PORTC=n[s1];
		_delay_us(500);
		PORTG <<=1;
		
		PORTC=n[s2];
		_delay_us(500);
		PORTG <<=1;

		PORTC=n[s3];
		_delay_us(500);
		PORTG <<=1;

		PORTC=n[s4];
		_delay_us(500);
		PORTG <<=1;
	}
}
